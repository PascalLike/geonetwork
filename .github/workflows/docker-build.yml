name: Build GeoNetwork 5 docker image and push to ghcr.io

on:
  push:
    branches: [ "feature/multi-architecture-build" ]
  pull_request:
    branches: [ "feature/multi-architecture-build" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Build project
        run: mvn clean install -DskipTests
      
      - name: Set lowercase repository owner
        if: github.event_name == 'push'
        id: repo
        run: echo "owner_lc=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      
      - name: Log in to GitHub Container Registry
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and Push Multi-arch Docker image
        if: github.event_name == 'push'
        env:
          DOCKER_CONFIG: ${{ github.workspace }}/.docker
        run: |
          # Copy Docker credentials for buildpack to use
          mkdir -p $DOCKER_CONFIG
          cp ~/.docker/config.json $DOCKER_CONFIG/config.json
          
          IMAGE_NAME="ghcr.io/${{ steps.repo.outputs.owner_lc }}/gn5-main"
          
          mvn spring-boot:build-image \
            -pl src/apps/geonetwork \
            -Dspring-boot.build-image.imageName=${IMAGE_NAME}:${{ github.sha }} \
            -Dspring-boot.build-image.platforms=linux/amd64,linux/arm64 \
            -Dspring-boot.build-image.publish=true \
            -Dspring-boot.build-image.docker.host=unix:///var/run/docker.sock
          
          # Also tag and push as latest
          mvn spring-boot:build-image \
            -pl src/apps/geonetwork \
            -Dspring-boot.build-image.imageName=${IMAGE_NAME}:latest \
            -Dspring-boot.build-image.platforms=linux/amd64,linux/arm64 \
            -Dspring-boot.build-image.publish=true \
            -Dspring-boot.build-image.docker.host=unix:///var/run/docker.sock
      
      - name: Build Docker image (PR only - single arch)
        if: github.event_name == 'pull_request'
        run: |
          mvn spring-boot:build-image \
            -pl src/apps/geonetwork \
            -Dspring-boot.build-image.imageName=gn5-main:${{ github.sha }}