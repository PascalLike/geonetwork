x-geonetwork-environment:
  &default-geonetwork-environment
  WEBAPP_CONTEXT_PATH: /geonetwork
  DATA_DIR: /catalogue-data
  TZ: Europe/Amsterdam

  JAVA_OPTS: >-
    --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED
    -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true
    -Xms512M -Xss512M -Xmx2G -XX:+UseConcMarkSweepGC
    -Djetty.httpConfig.requestHeaderSize=32768
    -Dorg.eclipse.jetty.server.Request.maxFormContentSize=500000
    -Dorg.eclipse.jetty.server.Request.maxFormKeys=4000
  # For remote debug
  # -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005

  GN_CONFIG_PROPERTIES: >-
    -Dgeonetwork.dir=/catalogue-data
    -Dgeonetwork.formatter.dir=/catalogue-data/data/formatter
    -Dgeonetwork.schema.dir=/opt/geonetwork/WEB-INF/data/config/schema_plugins
    -Dgeonetwork.indexConfig.dir=/opt/geonetwork/WEB-INF/data/config/index
    -Dgeonetwork.schemapublication.dir=/opt/geonetwork/WEB-INF/data/resources/schemapublication
    -Dgeonetwork.htmlcache.dir=/opt/geonetwork/WEB-INF/data/resources/htmlcache
    -Des.host=elasticsearch
    -Des.protocol=http
    -Des.port=9200
    -Des.url=http://elasticsearch:9200
    -Des.username=
    -Des.password=
    -Dgeonetwork.ESFeaturesProxy.targetUri=http://elasticsearch:9200/gn-features/{_}
    -Dgeonetwork.HttpDashboardProxy.targetUri=http://kibana:5601
    -Dgeonetwork.MicroServicesProxy.targetUri=http://ogc-api-records-service:8080


  GEONETWORK_DB_TYPE: postgres
  GEONETWORK_DB_HOST: database
  GEONETWORK_DB_PORT: 5432
  GEONETWORK_DB_NAME: geonetwork
  GEONETWORK_DB_USERNAME: geonetwork
  GEONETWORK_DB_PASSWORD: geonetwork
  VIRTUAL_HOST: localhost

x-service-geonetwork:
  &default-service-geonetwork
  image: geonetwork:4.4.5
  healthcheck:
    test: "curl http://localhost:8080/"
    interval: 5s
    timeout: 5s
    retries: 30
  restart: always
  volumes:
    - geonetwork:/catalogue-data
  depends_on:
    database:
      condition: service_healthy
  networks:
    - gn-network
    - frontend

volumes:
  geonetwork:
  esdata:
  pgdata:

networks:
  gn-network:
    driver: bridge
  frontend:
    driver: bridge
services:
  database:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: geonetwork
    command: [ "postgres",
               "-c", "log_statement=all",
               "-c", "logging_collector=true",
               "-c", "log_file_mode=0644",
               "-c", "log_directory=/var/log/postgresql",
               "-c", "log_filename=postgresql.log" ]
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    networks:
      - gn-network

  geonetwork5:
    image: docker.io/library/gn-main-app:5.0.0-SNAPSHOT
    environment:
      - SPRING_CONFIG_LOCATION=file:/config/application.yml
      - GN5_BASE_URL=http://localhost:7979/
      - GN4_BASE_URL=http://localhost:8080/geonetwork
      - GN4_DOCKER_URL=http://geonetwork4:8080/geonetwork
      - GN4_PROXY_BASE_URL=http://localhost:7979/geonetwork
      - ELASTIC_URL=http://elasticsearch:9200
    volumes:
      - ./docker-application.yml:/config/application.yml
    ports:
      - 7979:7979
    networks:
      - gn-network

  geonetwork4:
    <<: *default-service-geonetwork
    environment:
      << : *default-geonetwork-environment
      HARVESTER_SCHEDULER_ENABLED: "true"
      HARVESTER_REFRESH_INTERVAL_MINUTES: 2
    expose:
      - "8080"
    ports:
      - 8080:8080

  elasticsearch:
    image: elasticsearch:8.14.3
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: "curl -s http://localhost:9200 >/dev/null || exit 1"
      interval: 10s
      timeout: 2s
      retries: 10
    environment:
        - cluster.name=docker-cluster
        - bootstrap.memory_lock=true
        - discovery.type=single-node
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - xpack.security.enabled=false
        - xpack.security.enrollment.enabled=false
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - gn-network

